import asyncio
from aiogram import Bot, Dispatcher, types
# (–∏ –≤–µ—Å—å –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥)
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command, CommandObject
from aiogram.types import Message, ChatMemberUpdated, ChatType
from aiogram.enums import ChatMemberStatus
import sqlite3
import os

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
BOT_TOKEN = os.getenv("BOT_TOKEN", "8220664661:AAEgzgF364BHjh6OLaHHoxUkCmekTILZMF8")
CHANNEL_LINK = "https://t.me/ERR0R_7O7"
DONATE_LINK = "https://nowpayments.io/payment/?api_key=HVZHGZD-ZXH4JN7-JTKJ21M-W7GKBZM"
BOT_USERNAME = "GypX_bot"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# === –ë–ê–ó–ê ===
conn = sqlite3.connect("bot_data.db")
c = conn.cursor()
c.execute('''CREATE TABLE IF NOT EXISTS settings (
    chat_id INTEGER PRIMARY KEY, 
    welcome TEXT, 
    rules TEXT, 
    warn_limit INTEGER DEFAULT 3, 
    warn_msg TEXT DEFAULT '–¢—ã –ø–æ–ª—É—á–∏–ª –≤–∞—Ä–Ω')''')
c.execute('''CREATE TABLE IF NOT EXISTS warns (
    chat_id INTEGER, 
    user_id INTEGER, 
    count INTEGER, 
    PRIMARY KEY(chat_id, user_id))''')
conn.commit()

# === –ü–†–ò–í–ï–¢–°–¢–í–ò–ï ===
@dp.message(Command("setwelcome"))
async def set_welcome(msg: Message, command: CommandObject):
    if not msg.chat.type.endswith("group"): return
    if not msg.from_user.id in [admin.user.id for admin in await bot.get_chat_administrators(msg.chat.id)]: return
    welcome = command.args
    c.execute("INSERT OR REPLACE INTO settings (chat_id, welcome) VALUES (?, ?)", (msg.chat.id, welcome))
    conn.commit()
    await msg.reply("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ, –ú–æ–π –î–∏–∫—Ç–∞—Ç–æ—Ä.")

@dp.message(Command("setrules"))
async def set_rules(msg: Message, command: CommandObject):
    if not msg.chat.type.endswith("group"): return
    if not msg.from_user.id in [admin.user.id for admin in await bot.get_chat_administrators(msg.chat.id)]: return
    rules = command.args
    c.execute("INSERT OR REPLACE INTO settings (chat_id, rules) VALUES (?, ?)", (msg.chat.id, rules))
    conn.commit()
    await msg.reply("–ü—Ä–∞–≤–∏–ª–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ù–∞–¥–µ—é—Å—å, –∫—Ç–æ-—Ç–æ –∏—Ö –≤–æ–æ–±—â–µ —á–∏—Ç–∞–µ—Ç.")

@dp.message(Command("welcome"))
async def get_welcome(msg: Message):
    c.execute("SELECT welcome FROM settings WHERE chat_id=?", (msg.chat.id,))
    res = c.fetchone()
    await msg.reply(res[0] if res else "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")

@dp.message(Command("rules"))
async def get_rules(msg: Message):
    c.execute("SELECT rules FROM settings WHERE chat_id=?", (msg.chat.id,))
    res = c.fetchone()
    await msg.reply(res[0] if res else "–ü—Ä–∞–≤–∏–ª–∞ –Ω–µ –∑–∞–¥–∞–Ω—ã. –°–≤–æ–±–æ–¥–∞? –ò–ª–∏ –ø–∏–∑–¥–µ—Ü?")

# === –í–ê–†–ù–´ ===
@dp.message(Command("setwarnlimit"))
async def set_warn_limit(msg: Message, command: CommandObject):
    if not msg.from_user.id in [admin.user.id for admin in await bot.get_chat_administrators(msg.chat.id)]: return
    c.execute("UPDATE settings SET warn_limit=? WHERE chat_id=?", (int(command.args), msg.chat.id))
    conn.commit()
    await msg.reply("–¢–µ–ø–µ—Ä—å –±–∞–Ω—Ö–∞–º–º–µ—Ä —Å—Ç—É—á–∏—Ç –ø–æ—Å–ª–µ {} –≤–∞—Ä–Ω–æ–≤.".format(command.args))

@dp.message(Command("setwarnmessage"))
async def set_warn_message(msg: Message, command: CommandObject):
    if not msg.from_user.id in [admin.user.id for admin in await bot.get_chat_administrators(msg.chat.id)]: return
    c.execute("UPDATE settings SET warn_msg=? WHERE chat_id=?", (command.args, msg.chat.id))
    conn.commit()
    await msg.reply("–í–∞—Ä–Ω –±—É–¥–µ—Ç —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å—Å—è –º—É–¥—Ä–æ—Å—Ç—å—é: '{}'.".format(command.args))

@dp.message(Command("warn"))
async def warn_user(msg: Message):
    if not msg.reply_to_message: 
        return await msg.reply("–û—Ç–≤–µ—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è, –ú–æ–π –î–∏–∫—Ç–∞—Ç–æ—Ä.")
    user_id = msg.reply_to_message.from_user.id
    chat_id = msg.chat.id
    c.execute("SELECT count FROM warns WHERE chat_id=? AND user_id=?", (chat_id, user_id))
    row = c.fetchone()
    new_count = (row[0] + 1) if row else 1
    c.execute("INSERT OR REPLACE INTO warns (chat_id, user_id, count) VALUES (?, ?, ?)", (chat_id, user_id, new_count))
    conn.commit()
    c.execute("SELECT warn_limit, warn_msg FROM settings WHERE chat_id=?", (chat_id,))
    setting = c.fetchone() or (3, "–¢—ã –ø–æ–ª—É—á–∏–ª –≤–∞—Ä–Ω")
    await msg.reply(f"{setting[1]} ({new_count}/{setting[0]})")
    if new_count >= setting[0]:
        await msg.reply("–ü–æ—à—ë–ª –Ω–∞—Ö!")
        await bot.ban_chat_member(chat_id, user_id)
        c.execute("DELETE FROM warns WHERE chat_id=? AND user_id=?", (chat_id, user_id))
        conn.commit()

# === –ò–ì–†–ê ===
@dp.message(Command("coinflip"))
async def coinflip(msg: Message):
    from random import choice
    await msg.reply(f"{msg.from_user.first_name}, —Ç–µ–±–µ –≤—ã–ø–∞–ª–æ: {choice(['–û—Ä–µ–ª ü¶Ö', '–†–µ—à–∫–∞ ü™ô'])}. –§–æ—Ä—Ç—É–Ω–∞ —Ç–µ–±—è —Ç–µ—Ä–ø–∏—Ç.")

# === –ü–†–ò –î–û–ë–ê–í–õ–ï–ù–ò–ò –í –ì–†–£–ü–ü–£ ===
@dp.chat_member()
async def on_chat_join(event: ChatMemberUpdated):
    if event.new_chat_member.status == ChatMemberStatus.MEMBER and event.from_user.id == bot.id:
        admins = await bot.get_chat_administrators(event.chat.id)
        for admin in admins:
            try:
                await bot.send_message(admin.user.id,
                    f"üìå –°–ø—Ä–∞–≤–∫–∞ –¥–ª—è –ê–¥–º–∏–Ω–æ–≤\n\n–Ø GypX Bot. –ù–µ –ò—Ä–∏—Å, –Ω–æ –¥–µ—Ä–∑–∫–∏–π.\n\nüõ† –ö–æ–º–∞–Ω–¥—ã:\n/setwelcome ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n/setrules ‚Äî –ø—Ä–∞–≤–∏–ª–∞\n/setwarnlimit ‚Äî –ª–∏–º–∏—Ç –≤–∞—Ä–Ω–æ–≤\n/setwarnmessage ‚Äî —Ç–µ–∫—Å—Ç –ø—Ä–∏ –≤–∞—Ä–Ω–µ\n/warn ‚Äî –≤—ã–¥–∞—Ç—å –≤–∞—Ä–Ω\n/coinflip ‚Äî –æ—Ä—ë–ª/—Ä–µ—à–∫–∞\n\nüìö –ü–æ–¥—Ä–æ–±–Ω–µ–µ:\nüëâ https://t.me/{BOT_USERNAME}?start=about\nüí∏ –î–æ–Ω–∞—Ç: {DONATE_LINK}\nüì¢ –ö–∞–Ω–∞–ª: {CHANNEL_LINK}\n\n‚ö†Ô∏è –ë–µ–∑ –∞–¥–º–∏–Ω–∫–∏ —è –º–µ–±–µ–ª—å. –° –∞–¥–º–∏–Ω–∫–æ–π ‚Äî —Å—É–¥—å—è.")
            except:
                pass

# === –°–ü–†–ê–í–ö–ê /start ===
@dp.message(Command("start"))
async def start(msg: Message, command: CommandObject):
    if command.args == "about":
        await msg.reply(f"üìå GypX Bot. –ü–æ–º–æ—â–Ω–∏–∫ –∏–∑-–∑–∞ –∂–∞–ª–æ—Å—Ç–∏.\n\n/setwelcome ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n/setrules ‚Äî —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞\n/setwarnlimit ‚Äî –ª–∏–º–∏—Ç –≤–∞—Ä–Ω–æ–≤\n/setwarnmessage ‚Äî —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –≤–∞—Ä–Ω–µ\n/warn ‚Äî –≤—ã–¥–∞—Ç—å –≤–∞—Ä–Ω (–ø–æ –æ—Ç–≤–µ—Ç—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)\n/coinflip ‚Äî –æ—Ä—ë–ª –∏–ª–∏ —Ä–µ—à–∫–∞\n/rules ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞\n/welcome ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n\nüí∏ –î–æ–Ω–∞—Ç: {DONATE_LINK}\nüì¢ –ù–æ–≤–æ—Å—Ç–∏: {CHANNEL_LINK}")

# === –ó–ê–ü–£–°–ö ===
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
